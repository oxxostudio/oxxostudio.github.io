<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OXXO.STUDIO</title>
    <link>http://www.oxxostudio.tw</link>
    <description>OXXO.STUDIO 包含了視覺創作、網頁前端程式、UI與UX 三個主要面向，希望能藉由這個小小平台，能夠展示自己的作品與創意，同時也是我自己練習的平台，記錄自己的成長足跡！</description>
    <pubDate>2016-01-06 22:55:00 GMT</pubDate>
    <copyright>OXXO.STUDIO</copyright>
    <Webmaster>oxxo.studio@gmail.com</Webmaster>
    <language>zh-TW</language>
    <image>
      <url>http://www.oxxostudio.tw/img/layout/social.png</url>
      <title>OXXO.STUDIO</title>
      <link>http://www.oxxostudio.tw/</link>
    </image>
    <item>
      <title>用 LESS 寫 CSS ( 判斷式、迴圈、Function )</title>
      <link>http://www.oxxostudio.tw/articles/201601/css-less-03.html</link>
      <pubDate>2016-01-06 22:55:00 GMT</pubDate>
      <description>經過前兩篇的洗禮，應該可以直接用 LESS 來撰寫整個網站的 CSS 了，不過如果要針對大型的專案，在樣式的規劃上可能就要用到更進階的設定，第三篇的 LESS 文章將會介紹一些進階的功能。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201601/20160106_1_01b.jpg</url>
        <title>用 LESS 寫 CSS ( 判斷式、迴圈、Function )</title>
        <link>http://www.oxxostudio.tw/articles/201601/css-less-03.html</link>
      </image>
    </item>
    <item>
      <title>用 LESS 寫 CSS ( Mixin、Extend )</title>
      <link>http://www.oxxostudio.tw/articles/201601/css-less-02.html</link>
      <pubDate>2016-01-05 23:55:00 GMT</pubDate>
      <description>上一篇介紹了 LESS 的基本用法、import 和變數，這一篇要來玩一點比較進階的：函式、 mixin 和 extend，當我們可以熟練mixin 和 extend 的用法，相信對於整個 CSS 可以有大幅加速的功能。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201601/20160105_1_01b.jpg</url>
        <title>用 LESS 寫 CSS ( Mixin、Extend )</title>
        <link>http://www.oxxostudio.tw/articles/201601/css-less-02.html</link>
      </image>
    </item>
    <item>
      <title>用 LESS 寫 CSS ( 入門、Import、變數 )</title>
      <link>http://www.oxxostudio.tw/articles/201601/css-less-01.html</link>
      <pubDate>2016-01-04 23:55:00 GMT</pubDate>
      <description>LESS 這套以 JavaScript 為基底的預處理器，除了可以用 gulp-less 來作轉換，更不需要安裝任何東西 ( 當然 NodeJS 還是得裝 )，就算你都不安裝，載一個 less.js 放在網頁裡面就可以直接撰寫 less 在網頁裡面跑，相當的方便好用，就這樣我一寫 LESS 就是寫了半年以上，也算是有點心得了。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201601/20160104_1_01b.jpg</url>
        <title>用 LESS 寫 CSS ( 入門、Import、變數 )</title>
        <link>http://www.oxxostudio.tw/articles/201601/css-less-01.html</link>
      </image>
    </item>
    <item>
      <title>獲取錄音資訊 (getUserMedia) </title>
      <link>http://www.oxxostudio.tw/articles/201601/web-audio-recorder.html</link>
      <pubDate>2016-01-03 23:55:00 GMT</pubDate>
      <description>當我們會使用音訊播放並且會製成頻譜圖之後，接著就要來玩玩錄音了，原理大概就是透過電腦的麥克風，獲取外部聲音，然後經由 Web Audio 聲音處理節點把聲音數位化，更進一步地把聲音儲存下來。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201601/20160103_2_01b.jpg</url>
        <title>獲取錄音資訊 (getUserMedia) </title>
        <link>http://www.oxxostudio.tw/articles/201601/web-audio-recorder.html</link>
      </image>
    </item>
    <item>
      <title>建立音樂頻譜 2 ( analyser )</title>
      <link>http://www.oxxostudio.tw/articles/201601/web-audio-api-Analyser.html</link>
      <pubDate>2016-01-03 14:55:00 GMT</pubDate>
      <description>這裏要來介紹另外一個製作方式，就是使用 analyser 節點，analyser 節點可以針對經過它的音頻做分析，所以相較 createScriptProcessor 會建立緩衝區來保留音頻訊號，處理速度會較快，但缺點是會失去一些高頻的訊號，不過如果只是要單純顯示音樂頻譜，倒是一個不錯的選擇。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201601/20160103_1_01b.jpg</url>
        <title>建立音樂頻譜 2 ( analyser )</title>
        <link>http://www.oxxostudio.tw/articles/201601/web-audio-api-Analyser.html</link>
      </image>
    </item>
    <item>
      <title>做個簡單的爬蟲 ( 幣值、空污 PM2.5 )</title>
      <link>http://www.oxxostudio.tw/articles/201512/spider-basic.html</link>
      <pubDate>2015-12-23 23:55:00 GMT</pubDate>
      <description>幾個月前聽了一場用 NodeJS 做爬蟲的分享，大致上就是用純前端的技術，來爬靜態網頁的資料，聽完一直很想做個爬蟲看看，剛好最近因為「空氣污染」( PM2.5 ) 正夯，公司也正在研發 PM2.5 的感測器，於是就想說自己先來試試看，用爬蟲去中央氣象局爬爬 PM2.5 的數據。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201512/20151223_1_01b.jpg</url>
        <title>做個簡單的爬蟲 ( 幣值、空污 PM2.5 )</title>
        <link>http://www.oxxostudio.tw/articles/201512/spider-basic.html</link>
      </image>
    </item>
    <item>
      <title>建立音樂頻譜 ( createMediaElementSource )</title>
      <link>http://www.oxxostudio.tw/articles/201512/web-audio-api-createmediaelementsource.html</link>
      <pubDate>2015-12-21 23:55:00 GMT</pubDate>
      <description>前幾篇認識了許多利用 Web Audio API 產生聲音或音效的方法，這篇則是要引入外部的音樂或聲音，並將聲音轉換為數值頻譜。( 因為轉換為數值，就可以拿這些數值來做應用了 )
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201512/20151221_1_01b.jpg</url>
        <title>建立音樂頻譜 ( createMediaElementSource )</title>
        <link>http://www.oxxostudio.tw/articles/201512/web-audio-api-createmediaelementsource.html</link>
      </image>
    </item>
  </channel>
</rss>

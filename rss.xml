<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OXXO.STUDIO</title>
    <link>http://www.oxxostudio.tw</link>
    <description>OXXO.STUDIO 包含了視覺創作、網頁前端程式、UI與UX 三個主要面向，希望能藉由這個小小平台，能夠展示自己的作品與創意，同時也是我自己練習的平台，記錄自己的成長足跡！</description>
    <pubDate>2015-09-06 23:00:00 GMT</pubDate>
    <copyright>OXXO.STUDIO</copyright>
    <Webmaster>oxxo.studio@gmail.com</Webmaster>
    <language>zh-TW</language>
    <image>
      <url>http://www.oxxostudio.tw/img/layout/social.png</url>
      <title>OXXO.STUDIO</title>
      <link>http://www.oxxostudio.tw/</link>
    </image>
    <item>
      <title>Google 語音辨識 API</title>
      <link>http://www.oxxostudio.tw/articles/201509/web-speech-api.html</link>
      <pubDate>2015-09-06 23:00:00 GMT</pubDate>
      <description>又是因為工作的緣故，接觸到 Google 語音辨識的 api，實在覺得還滿有趣的，由於是 Chrome 內建的功能，所以不需要額外載入其他資源就可以運行，算是相當的便利，不過也很可惜的現在就只有桌上版的 Chrome 才支援，可惜了連 iPhone 和 iPad 都不能跑呀！
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201509/20150906_1_01b.jpg</url>
        <title>Google 語音辨識 API</title>
        <link>http://www.oxxostudio.tw/articles/201509/web-speech-api.html</link>
      </image>
    </item>
    <item>
      <title>自動選取某個區域的文字</title>
      <link>http://www.oxxostudio.tw/articles/201508/select-text.html</link>
      <pubDate>2015-08-17 22:15:00 GMT</pubDate>
      <description>最近在工作上需要一個功能，就是點選一個按鈕可以全選某個區域內的文字，由於，找了一些解法大多都是針對文 input 的 text 或 textarea 所設計，，後來總算是在 Stack Overflow 發現了完美的解法，根據這個解法我就做出來了可以選取特定區域文字的範例。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201508/20150817_1_01b.jpg</url>
        <title>自動選取某個區域的文字</title>
        <link>http://www.oxxostudio.tw/articles/201508/select-text.html</link>
      </image>
    </item>
    <item>
      <title>FIGlet - ASCII Decorator</title>
      <link>http://www.oxxostudio.tw/articles/201508/figlet-ascii-decorator.html</link>
      <pubDate>2015-08-08 23:55:00 GMT</pubDate>
      <description>首先談到這種字體的由來，它其實有幾個固定名稱，幾種比較主要的稱呼分別是：「ASCII TEXT」、「ASCII TEXT Banner」、「ASCII Art」、「ASCII Decorator」和「FIGlet」，「FIGlet」這個詞應該是最標準的用法，因為這個詞可是在維基百科上頭有介紹的。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201508/20150808_1_01b.jpg</url>
        <title>FIGlet - ASCII Decorator</title>
        <link>http://www.oxxostudio.tw/articles/201508/figlet-ascii-decorator.html</link>
      </image>
    </item>
    <item>
      <title>用 Gulp 展開新的 blog 編輯旅程</title>
      <link>http://www.oxxostudio.tw/articles/201508/edit-blog-by-gulp.html</link>
      <pubDate>2015-08-05 22:55:00 GMT</pubDate>
      <description>Gulp 大概是我在今年一月開始接觸的，坦白說實在是滿好用的，主要因為 Gulp 有著龐大 npm package 的後盾，許多疑難雜症都相當容易找到解決的方式，且實際運作起來的速度也是不同凡響，加上自己也在工作上實際用來製作網站，在各種條件都備妥的情況下，自然而然的就把開發模式轉換過來了。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201508/20150805_1_01b.jpg</url>
        <title>用 Gulp 展開新的 blog 編輯旅程</title>
        <link>http://www.oxxostudio.tw/articles/201508/edit-blog-by-gulp.html</link>
      </image>
    </item>
    <item>
      <title>HTML5 控制裝置陀螺儀 ( 三軸 )</title>
      <link>http://www.oxxostudio.tw/articles/201506/html5-device-orientation.html</link>
      <pubDate>2015-06-30 22:55:00 GMT</pubDate>
      <description>在行動裝置發達的現在，手機或平板的瀏覽器效能也跟了上來，加上 iOS 與 Android 兩大陣營對於瀏覽器可以控制硬體的權限逐漸鬆手，慢慢的當年 HTML5 裏頭所制定出來，和控制裝置硬體相關的 API 也逐漸可以派上用場。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201506/20150630_1_01b.jpg</url>
        <title>HTML5 控制裝置陀螺儀 ( 三軸 )</title>
        <link>http://www.oxxostudio.tw/articles/201506/html5-device-orientation.html</link>
      </image>
    </item>
    <item>
      <title>玩轉 CSS 3D - 正八面體與正十二面體</title>
      <link>http://www.oxxostudio.tw/articles/201506/css-3d-platonic-solid-2.html</link>
      <pubDate>2015-06-20 21:55:00 GMT</pubDate>
      <description>上一篇介紹了正四面體與正六面體，接著我們要用同樣的方法，來製作正八面體與正十二面體，這兩個正多面體雖然組合的面比較多，不過因為具備了對稱性，所以只需要製作出一半的結構，另外一半再用反轉的方式接在一起即可。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201506/20150620_2_01b.jpg</url>
        <title>玩轉 CSS 3D - 正八面體與正十二面體</title>
        <link>http://www.oxxostudio.tw/articles/201506/css-3d-platonic-solid-2.html</link>
      </image>
    </item>
    <item>
      <title>玩轉 CSS 3D - 正四面體與正六面體</title>
      <link>http://www.oxxostudio.tw/articles/201506/css-3d-platonic-solid-1.html</link>
      <pubDate>2015-06-20 00:55:00 GMT</pubDate>
      <description>理解了 CSS 3D 的箇中原理之後，直接來畫正多面體吧！只要正多面體可以畫出來，基本上在 CSS 3D 的領域裡，大概就沒甚麼難得倒我們了，「正多面體，或稱柏拉圖立體， 指各面都是全等的正多邊形且每一個頂點所接的面數都是一樣的凸多面體。」簡單來說，就是非常對稱的立方體，而且每一個面都是由正多邊形組成，因此在這一篇，將會畫出正四面體、正六面體。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201506/20150620_1_01b.jpg</url>
        <title>玩轉 CSS 3D - 正四面體與正六面體</title>
        <link>http://www.oxxostudio.tw/articles/201506/css-3d-platonic-solid-1.html</link>
      </image>
    </item>
    <item>
      <title>玩轉 CSS 3D - 原理篇</title>
      <link>http://www.oxxostudio.tw/articles/201506/css-3d.html</link>
      <pubDate>2015-06-19 17:25:00 GMT</pubDate>
      <description>CSS 3D 坦白說就是純粹利用計算的方法，藉由瀏覽器的高效能，在 2D 的空間繪製一個 3D 的圖形，就像我們拿張紙，用鉛筆在上頭畫個正立方體之類的，從這篇開始以及再來的一兩篇，將會深入介紹 CSS 3D 的繪圖以及直接做些應用。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201506/20150619_1_01b.jpg</url>
        <title>玩轉 CSS 3D - 原理篇</title>
        <link>http://www.oxxostudio.tw/articles/201506/css-3d.html</link>
      </image>
    </item>
    <item>
      <title>oxxo.studio 一周年生日快樂</title>
      <link>http://www.oxxostudio.tw/articles/201505/oxxostudio.html</link>
      <pubDate>2015-05-01 00:00:00 GMT</pubDate>
      <description>今天是 oxxo.studio 開台一年的日子，雖然說部落格上的文章不是從五月一號開始，但第一個版本是在五月一號上線的，當初其實也用這個部落格作為我自己的生日禮物 ( 我也是五月一號出生ㄎㄎ )。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201505/20150501_01.jpg</url>
        <title>oxxo.studio 一周年生日快樂</title>
        <link>http://www.oxxostudio.tw/articles/201505/oxxostudio.html</link>
      </image>
    </item>
    <item>
      <title>運用 clip-path 的純 CSS 形狀變換</title>
      <link>http://www.oxxostudio.tw/articles/201503/css-clip-path.html</link>
      <pubDate>2015-03-30 23:55:00 GMT</pubDate>
      <description>在單一 div 的正多邊形變換 ( 純 CSS ) 這篇所提到繪製正多邊形的方法，算是純粹利用偽元素來完成，不過坦白說還有另外一種方法，可以將單一 div 做更多形狀的變換，這種方法就是 CSS3 的「clip-path」，這個「clip-path 」看起來有點眼熟，因為它原本就存在於 SVG 裡頭。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201503/20150330_1_01b.jpg</url>
        <title>運用 clip-path 的純 CSS 形狀變換</title>
        <link>http://www.oxxostudio.tw/articles/201503/css-clip-path.html</link>
      </image>
    </item>
    <item>
      <title>單一 div 的正多邊形變換 ( 純 CSS )</title>
      <link>http://www.oxxostudio.tw/articles/201503/css-regular-polygon-transform.html</link>
      <pubDate>2015-03-29 22:05:00 GMT</pubDate>
      <description>這篇純粹利用 CSS，讓「單一個」div，從正三角形變換為正八邊形 ( 單一 div 最多只能做到正八邊形 )，最後再搭配動畫的效果，變成正多邊形的變換動畫，也由於正多邊形需要用到不少的三角函數計算，為了方便起見，這裡將正多邊形的邊統一都設為 100px。
      </description>
      <image>
        <url>http://www.oxxostudio.tw/img/articles/201503/20150329_1_01b.jpg</url>
        <title>單一 div 的正多邊形變換 ( 純 CSS )</title>
        <link>http://www.oxxostudio.tw/articles/201503/css-regular-polygon-transform.html</link>
      </image>
    </item>
  </channel>
</rss>
